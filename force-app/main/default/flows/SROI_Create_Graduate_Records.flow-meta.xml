<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>addGraduateIds</name>
        <label>Add Graduate Ids</label>
        <locationX>264</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>varGraduateIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>helpGraduateIds.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>helpGraduateIds</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>addPreparedSROI</name>
        <label>Add Prepared SROI</label>
        <locationX>856</locationX>
        <locationY>1766</locationY>
        <assignmentItems>
            <assignToReference>outputSROICalculations</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Prepare_SROI_Calculation</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopGraduates</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>addPreparedTask</name>
        <label>Add Prepared Task</label>
        <locationX>920</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>outputFixWorkExperiences</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tempFixWorkExperience</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Prepare_SROI_Calculation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>This happens before the Decision (and Loop) to ensure it&apos;s cleared in case there are no Work Experiences, but a Previous Graduate had Benefits.</description>
        <name>clearHealthBenefits</name>
        <label>Clear Health Benefits Variable</label>
        <locationX>856</locationX>
        <locationY>866</locationY>
        <assignmentItems>
            <assignToReference>tempHealthBenefits</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decisionWorkExperienceExists</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>prepareWorkExperienceFixTask</name>
        <label>Prepare Work Experience Fix Task</label>
        <locationX>920</locationX>
        <locationY>1082</locationY>
        <assignmentItems>
            <assignToReference>tempFixWorkExperience.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>High</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>tempFixWorkExperience.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskDueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>tempFixWorkExperience.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Correct Work Experiences</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>tempFixWorkExperience.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskDescription</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>tempFixWorkExperience.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>loopGraduates.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>tempFixWorkExperience.WhoId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>loopGraduates.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>addPreparedTask</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setHealthBenefits</name>
        <label>Set Health Benefits</label>
        <locationX>1056</locationX>
        <locationY>1298</locationY>
        <assignmentItems>
            <assignToReference>tempHealthBenefits</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>tempWorkExperience</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>loopWorkExperiences.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopWorkExperiences</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>filterWorkExperience</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Graduate&apos;s Work Experiences</label>
        <locationX>856</locationX>
        <locationY>758</locationY>
        <assignNextValueToReference>currentItem_filterWorkExperience</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>getWorkExperiences</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_filterWorkExperience.Resident__c</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>loopGraduates.Id</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>clearHealthBenefits</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>decisionHealthBenefits</name>
        <label>Health Benefits</label>
        <locationX>1100</locationX>
        <locationY>1190</locationY>
        <defaultConnector>
            <targetReference>loopWorkExperiences</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>None</defaultConnectorLabel>
        <rules>
            <name>decisionHealthBenefits_existing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>tempHealthBenefits</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loopWorkExperiences</targetReference>
            </connector>
            <label>Existing</label>
        </rules>
        <rules>
            <name>decisionHealthBenefits_new</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loopWorkExperiences.Health_Benefits__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setHealthBenefits</targetReference>
            </connector>
            <label>New</label>
        </rules>
    </decisions>
    <decisions>
        <name>decisionWorkExperienceExists</name>
        <label>Work Experience Exists</label>
        <locationX>856</locationX>
        <locationY>974</locationY>
        <defaultConnector>
            <targetReference>prepareWorkExperienceFixTask</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>decisionWorkExperienceExists_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>filterWorkExperience</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loopWorkExperiences</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Creates a Graduate&apos;s SROI Calculation record for an SROI run.</description>
    <environments>Default</environments>
    <formulas>
        <name>taskDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()+7</expression>
    </formulas>
    <interviewLabel>SROI - Create Graduate Records {!$Flow.CurrentDateTime}</interviewLabel>
    <label>SROI - Create Graduate Records</label>
    <loops>
        <description>Necessary because Gets can&apos;t do IN with record type variables.</description>
        <name>helpGraduateIds</name>
        <label>Collect Graduate Ids</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <collectionReference>getGraduates</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>addGraduateIds</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>getWorkExperiences</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>loopGraduates</name>
        <label>Each Graduate</label>
        <locationX>176</locationX>
        <locationY>650</locationY>
        <collectionReference>getGraduates</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>filterWorkExperience</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Create_WE_Fix_Tasks</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Because we can&apos;t be guaranteed there&apos;s only ONE Work Experience, we have to iterate through them. Benefits may differ between concurrent jobs, so we also have to make a business choice: If ANY concurrent jobs have Health Benefits, then the Graduate is considered to have had Health Benefits.</description>
        <name>loopWorkExperiences</name>
        <label>Loop through Experiences</label>
        <locationX>792</locationX>
        <locationY>1082</locationY>
        <collectionReference>filterWorkExperience</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>decisionHealthBenefits</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Prepare_SROI_Calculation</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_SROI_Calculations</name>
        <label>Create SROI Calculations</label>
        <locationX>176</locationX>
        <locationY>2066</locationY>
        <inputReference>outputSROICalculations</inputReference>
    </recordCreates>
    <recordCreates>
        <name>Create_WE_Fix_Tasks</name>
        <label>Create WE Fix Tasks</label>
        <locationX>176</locationX>
        <locationY>1958</locationY>
        <connector>
            <targetReference>Create_SROI_Calculations</targetReference>
        </connector>
        <inputReference>outputFixWorkExperiences</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Gets all the Resident (Contact) records which are Graduates. Does not enforce a Date, since we&apos;ll also count people who may be graduating soon as well as everyone in the past.</description>
        <name>getGraduates</name>
        <label>Get Graduates</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>helpGraduateIds</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Stakeholder_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Graduated</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>applicationCriminalRecord__c</queriedFields>
        <queriedFields>intakeDrugAlcoholAbuse__c</queriedFields>
        <queriedFields>graduateFirstRearrestDate__c</queriedFields>
        <queriedFields>residentGraduationDate__c</queriedFields>
        <queriedFields>intakePostTaxIncome__c</queriedFields>
        <queriedFields>graduatePostTaxIncome__c</queriedFields>
        <queriedFields>budgetSnapLinkAmount__c</queriedFields>
        <queriedFields>budgetUnemploymentAmount__c</queriedFields>
        <queriedFields>OwnerId</queriedFields>
        <sortField>residentGraduationDate__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getWorkExperiences</name>
        <label>Get Work Experiences</label>
        <locationX>176</locationX>
        <locationY>542</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loopGraduates</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND (3 OR 4)</filterLogic>
        <filters>
            <field>Resident__c</field>
            <operator>In</operator>
            <value>
                <elementReference>varGraduateIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>End_Date__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>End_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Work_Experience__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Resident__c</queriedFields>
        <queriedFields>Health_Benefits__c</queriedFields>
        <sortField>Resident__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getGraduates</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>taskDescription</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A Work Experience was not found which was active during the Graduation Date ({!loopGraduates.residentGraduationDate__c}). 
This is affecting SROI Calculations. Please ensure one is created.</text>
    </textTemplates>
    <transforms>
        <name>Prepare_SROI_Calculation</name>
        <label>Prepare SROI Calculation</label>
        <locationX>856</locationX>
        <locationY>1658</locationY>
        <connector>
            <targetReference>addPreparedSROI</targetReference>
        </connector>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <objectType>SROI_Calculation__c</objectType>
        <scale>0</scale>
        <transformValues>
            <transformValueActions>
                <outputFieldApiName>applicationCriminalRecord__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>loopGraduates.applicationCriminalRecord__c</elementReference>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>budgetSnapLinkAmount__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <formulaDataType>Number</formulaDataType>
                    <formulaExpression>BLANKVALUE({!loopGraduates.budgetSnapLinkAmount__c},0)</formulaExpression>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>budgetUnemploymentAmount__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <formulaDataType>Number</formulaDataType>
                    <formulaExpression>BLANKVALUE({!loopGraduates.budgetUnemploymentAmount__c},0)</formulaExpression>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>graduateFirstRearrestDate__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>loopGraduates.graduateFirstRearrestDate__c</elementReference>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>graduatePostTaxIncome__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <formulaDataType>Number</formulaDataType>
                    <formulaExpression>BLANKVALUE({!loopGraduates.graduatePostTaxIncome__c},0)</formulaExpression>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>healthBenefits__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>tempHealthBenefits</elementReference>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>intakeDrugAlcoholAbuse__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>loopGraduates.intakeDrugAlcoholAbuse__c</elementReference>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>intakePostTaxIncome__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <formulaDataType>Number</formulaDataType>
                    <formulaExpression>BLANKVALUE({!loopGraduates.intakePostTaxIncome__c},0)</formulaExpression>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>residentGraduationDate__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>loopGraduates.residentGraduationDate__c</elementReference>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>workExperienceId__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>tempWorkExperience</elementReference>
                </value>
            </transformValueActions>
            <transformValueActions>
                <outputFieldApiName>graduate__c</outputFieldApiName>
                <transformType>Map</transformType>
                <value>
                    <elementReference>loopGraduates.Id</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <variables>
        <name>currentItem_filterWorkExperience</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Work_Experience__c</objectType>
    </variables>
    <variables>
        <name>outputFixWorkExperiences</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>outputSROICalculations</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>SROI_Calculation__c</objectType>
    </variables>
    <variables>
        <name>tempFixWorkExperience</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>tempHealthBenefits</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Used to Stamp which Work Experience determined Health Benefits.</description>
        <name>tempWorkExperience</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varGraduateIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
